{"version":3,"sources":["common.js","ScreenshotsNavigation.js","ScreenshotsComparisonApp.js","SingleImageView.js","SideBySideView.js","DiffView.js","BlendView.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","drawerPaper","width","getIcon","meta","differentSize","isRemoved","isAdded","isChanged","ScreenshotsNavigation","screenshotsList","activeScreenshotIndex","onScreenshotChange","onFilterChange","initialFilterValue","classes","React","useState","isFilterActive","setFilter","Drawer","paper","variant","open","Grid","container","justify","direction","alignItems","item","FormControlLabel","control","Switch","checked","onChange","event","filterValue","name","label","Divider","List","map","index","path","ListItem","button","onClick","selected","ListItemIcon","ListItemText","secondary","theme","root","display","drawer","flexShrink","appBar","marginLeft","content","flexGrow","padding","spacing","ScreenshotsComparisonApp","screenshotsManifest","tabs","baseScreenshotsPath","currentScreenshotsPath","diffScreenshotsPath","screenshots","activeTabIndex","setActiveTabIndex","setActiveScreenshotIndex","Object","entries","filter","setScreenshotsList","activeScreenshot","base","current","diff","reducedMode","setReducedMode","visibleTabs","tab","visibleInReducedMode","keyboardInputHandler","keyCode","length","previousScreenshotIndex","previousTabIndex","useEffect","window","document","addEventListener","removeEventListener","className","filteredScreenshots","TabContext","value","AppBar","position","TabList","newValue","findIndex","Tab","component","TabPanel","img","maxWidth","marginBottom","marginTop","SingleImageView","screenshotPath","screenshotLabel","Typography","Paper","elevation","src","sideBySideContainer","sideBySideImg","sideBySideLabel","SideBySideView","diffContainer","diffImg","DiffView","blendContainer","blendCurrentImg","left","top","blendImg","BlendView","opacity","setOpacity","gutterBottom","Slider","defaultValue","style","JSON","parse","querySelector","innerHTML","ReactDOM","render"],"mappings":"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","file":"static/js/main.8e4ea1b7.chunk.js","sourcesContent":["export const drawerWidth = 360;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport PhotoSizeSelectLargeIcon from '@material-ui/icons/PhotoSizeSelectLarge';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { drawerWidth } from './common';\n\nconst useStyles = makeStyles(() => ({\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nconst getIcon = (meta) => {\n  if (meta.differentSize) {\n    return <PhotoSizeSelectLargeIcon />\n  }\n  if (meta.isRemoved) {\n    return <DeleteForeverIcon />;\n  }\n  if (meta.isAdded) {\n    return <AddBoxIcon />;\n  }\n  if (meta.isChanged) {\n    return <WarningIcon />;\n  }\n  return null;\n};\n\nfunction ScreenshotsNavigation({\n  screenshotsList,\n  activeScreenshotIndex,\n  onScreenshotChange,\n  onFilterChange,\n  initialFilterValue,\n}) {\n  const classes = useStyles();\n  const [isFilterActive, setFilter] = React.useState(initialFilterValue);\n\n  const handleFilterChange = (event, filterValue) => {\n    setFilter(filterValue);\n    onFilterChange(filterValue);\n  };\n\n  return (\n    <Drawer\n      classes={{ paper: classes.drawerPaper }}\n      variant=\"permanent\"\n      open>\n      <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\n        <Grid item>\n          <FormControlLabel\n            control={<Switch checked={isFilterActive} onChange={handleFilterChange} name=\"filterScreenshots\" />}\n            label=\"Display only changed screenshots\"\n          />\n        </Grid>\n      </Grid>\n      <Divider />\n      <List>\n        {screenshotsList.map(([path, meta], index) => (\n          <ListItem\n            button\n            key={path}\n            onClick={() => onScreenshotChange(index)}\n            selected={activeScreenshotIndex == index}\n            aria-label=\"screenshot link\">\n            <ListItemIcon>\n              {getIcon(meta)}\n            </ListItemIcon>\n            <ListItemText secondary={path} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nScreenshotsNavigation.propTypes = {\n  screenshotsList: PropTypes.array,\n  activeScreenshotIndex: PropTypes.number,\n  onScreenshotChange: PropTypes.func,\n  onFilterChange: PropTypes.func,\n  initialFilterValue: PropTypes.bool,\n};\n\nexport default ScreenshotsNavigation;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport TabList from '@material-ui/lab/TabList';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ScreenshotsNavigation from './ScreenshotsNavigation';\n\nimport { drawerWidth } from './common';\n\nconst ARROW_LEFT = 37;\nconst ARROW_UP = 38;\nconst ARROW_RIGHT = 39;\nconst ARROW_DOWN = 40;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ScreenshotsComparisonApp({ screenshotsManifest, tabs }) {\n  const { meta: { baseScreenshotsPath, currentScreenshotsPath, diffScreenshotsPath }, screenshots } = screenshotsManifest;\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeScreenshotIndex, setActiveScreenshotIndex] = useState(0);\n  const [screenshotsList, setScreenshotsList] = useState(Object.entries(screenshots).filter(([, meta]) => meta.isChanged));\n  const activeScreenshot = {\n    base: './' + baseScreenshotsPath + '/' + screenshotsList[activeScreenshotIndex][0],\n    current: './' + currentScreenshotsPath + '/' + screenshotsList[activeScreenshotIndex][0],\n    diff: './' + diffScreenshotsPath + '/' + screenshotsList[activeScreenshotIndex][0],\n    meta: screenshotsList[activeScreenshotIndex][1],\n  };\n  const [reducedMode, setReducedMode] = useState(true);\n  const classes = useStyles();\n  const visibleTabs = reducedMode ? tabs.filter(tab => tab.visibleInReducedMode) : tabs;\n\n  const keyboardInputHandler = ({ keyCode } = {}) => {\n    if (keyCode === ARROW_RIGHT) {\n      setActiveTabIndex((activeTabIndex + 1) % 3);\n      return;\n    }\n\n    if (keyCode === ARROW_LEFT) {\n      const previousTabIndex = activeTabIndex - 1;\n      setActiveTabIndex(previousTabIndex < 0 ? tabs.length - 1 : previousTabIndex);\n      return;\n    }\n\n    if (keyCode === ARROW_UP) {\n      const previousScreenshotIndex = activeScreenshotIndex - 1;\n      setActiveScreenshotIndex(previousScreenshotIndex < 0 ? screenshotsList.length - 1 : previousScreenshotIndex);\n      return;\n    }\n\n    if (keyCode === ARROW_DOWN) {\n      setActiveScreenshotIndex((activeScreenshotIndex + 1) % screenshotsList.length);\n    }\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTabIndex(tabs.findIndex(({ name }) => name === newValue));\n  };\n\n  const handleScreenshotChange = (activeScreenshotIndex) => {\n    setActiveScreenshotIndex(activeScreenshotIndex);\n  };\n\n  const handleScreenshotsFilterChange = (isFilterActive) => {\n    const filteredScreenshots = Object.entries(screenshots).filter(([, meta]) => !isFilterActive || meta.isChanged);\n    if (isFilterActive && activeScreenshotIndex >= filteredScreenshots.length) {\n      setActiveScreenshotIndex(0);\n    }\n    setScreenshotsList(filteredScreenshots);\n  };\n\n  useEffect(() => {\n    const { isAdded, isRemoved, differentSize } = screenshotsList[activeScreenshotIndex][1];\n    setReducedMode(isAdded || isRemoved || differentSize)\n  }, [activeScreenshotIndex]);\n\n  useEffect(() => {\n   if (reducedMode) {\n     setActiveTabIndex(0); \n   }\n  }, [reducedMode]);\n  \n  useEffect(() => {\n    window.document.addEventListener('keydown', keyboardInputHandler, false);\n\n    return () => {\n      window.document.removeEventListener('keydown', keyboardInputHandler);\n    };\n  });\n\n  return (\n    <div className={classes.root}>\n      <nav className={classes.drawer}>\n        <ScreenshotsNavigation\n          activeScreenshotIndex={activeScreenshotIndex}\n          initialFilterValue\n          screenshotsList={screenshotsList}\n          onFilterChange={handleScreenshotsFilterChange}\n          onScreenshotChange={handleScreenshotChange} />\n      </nav>\n      <TabContext value={tabs[activeTabIndex].name}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <TabList\n            value={tabs[activeTabIndex].name}\n            onChange={handleTabChange}>\n              {visibleTabs.map(({ name}) => <Tab label={name} value={name} key={name} />)}\n          </TabList>\n        </AppBar>\n        <main className={classes.content}>\n          {tabs.map(({ name, component }) => (\n            <TabPanel value={name} key={name}>\n              {component({ activeScreenshot })}\n            </TabPanel>\n          ))}\n        </main>\n      </TabContext>\n    </div>\n  );\n}\n\nScreenshotsComparisonApp.propTypes = {\n  screenshotsManifest: PropTypes.object,\n  tabs: PropTypes.array,\n};\n\nexport default ScreenshotsComparisonApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  img: {\n    maxWidth: '100%',\n  },\n  label: {\n    marginBottom: 20,\n    marginTop: 18,\n  },\n}));\n\nfunction SingleImageView({ activeScreenshot }) {\n  const classes = useStyles();\n  const { meta: { isAdded }, current, base } = activeScreenshot;\n  const screenshotPath = isAdded ? current : base;\n  const screenshotLabel = isAdded ? 'New' : 'Old';\n\n  return (\n    <Grid container justify=\"center\" direction=\"row\" alignItems=\"center\">\n      <Grid item>\n        <Typography className={classes.label} aria-label=\"screenshot label\">{screenshotLabel}</Typography>\n        <Paper elevation={6}>\n          <img src={screenshotPath} className={classes.img} />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nSingleImageView.propTypes = {\n  activeScreenshot: PropTypes.object,\n};\n\nexport default SingleImageView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SingleImageView from './SingleImageView';\n\nconst useStyles = makeStyles(() => ({\n  sideBySideContainer: {\n    maxWidth: '50%',\n  },\n  sideBySideImg: {\n    maxWidth: '100%',\n  },\n  sideBySideLabel: {\n    marginBottom: 20,\n    marginTop: 18,\n  },\n}));\n\nfunction SideBySideView({ activeScreenshot }) {\n  const classes = useStyles();\n  const { meta: { isAdded, isRemoved }, current, base } = activeScreenshot;\n\n  if (isAdded || isRemoved) {\n    return (\n      <SingleImageView activeScreenshot={activeScreenshot} />\n    );\n  }\n\n  return (\n    <Grid container justify=\"center\" direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Grid item className={classes.sideBySideContainer}>\n        <Typography className={classes.sideBySideLabel} aria-label=\"screenshot label\">Old</Typography>\n        <Paper elevation={6}>\n          <img src={base} className={classes.sideBySideImg} />\n        </Paper>\n      </Grid>\n      <Grid item className={classes.sideBySideContainer}>\n        <Typography className={classes.sideBySideLabel} aria-label=\"screenshot label\">New</Typography>\n        <Paper elevation={6}>\n          <img src={current} className={classes.sideBySideImg} />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nSideBySideView.propTypes = {\n  activeScreenshot: PropTypes.object,\n};\n\nexport default SideBySideView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SingleImageView from './SingleImageView';\n\nconst useStyles = makeStyles(() => ({\n  diffContainer: {\n    marginTop: 62,\n  },\n  diffImg: {\n    maxWidth: '100%',\n  },\n}));\n\nfunction DiffView({ activeScreenshot }) {\n  const classes = useStyles();\n  const { meta: { isAdded, isRemoved }, diff } = activeScreenshot;\n\n  if (isAdded || isRemoved) {\n    return (\n      <SingleImageView activeScreenshot={activeScreenshot} />\n    );\n  }\n\n  return (\n    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\n      <Grid item>\n        <Paper elevation={6} className={classes.diffContainer}>\n          <img src={diff} className={classes.diffImg} />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nDiffView.propTypes = {\n  activeScreenshot: PropTypes.object,\n};\n\nexport default DiffView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SingleImageView from './SingleImageView';\n\nconst useStyles = makeStyles(() => ({\n  blendContainer: {\n    position: 'relative',\n  },\n  blendCurrentImg: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    maxWidth: '100%',\n  },\n  blendImg: {\n    maxWidth: '100%',\n  },\n}));\n\nfunction BlendView({ activeScreenshot }) {\n  const { meta: { isAdded, isRemoved }, current, base } = activeScreenshot;\n  const classes = useStyles();\n  const [opacity, setOpacity] = React.useState(50);\n  const handleOpacityChange = (event, newValue) => {\n    setOpacity(newValue);\n  };\n\n  if (isAdded || isRemoved) {\n    return (\n      <SingleImageView activeScreenshot={activeScreenshot} />\n    );\n  }\n\n  return (\n    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\n      <Grid item>\n        <Typography gutterBottom aria-label=\"opacity input label\">Opacity</Typography>\n        <Slider\n          aria-label=\"opacity input\"\n          onChange={handleOpacityChange}\n          defaultValue={50} />\n      </Grid>\n      <Grid item>\n        <Paper elevation={6} className={classes.blendContainer}>\n          <img src={base} className={classes.blendImg} />\n          <img\n            src={current}\n            className={classes.blendCurrentImg}\n            style={{ opacity: opacity / 100 }} />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nBlendView.propTypes = {\n  activeScreenshot: PropTypes.object,\n};\n\nexport default BlendView;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ScreenshotsComparisonApp from './ScreenshotsComparisonApp';\nimport SideBySideView from './SideBySideView';\nimport DiffView from './DiffView';\nimport BlendView from './BlendView';\n\nconst tabs = [\n  {\n    name: 'Side by Side',\n    component: SideBySideView,\n    visibleInReducedMode: true,\n  },\n  {\n    name: 'Blend',\n    component: BlendView,\n    visibleInReducedMode: false,\n  },\n  {\n    name: 'Diff',\n    component: DiffView,\n    visibleInReducedMode: false,\n  },\n];\nlet screenshotsManifest = {};\n\ntry {\n  screenshotsManifest = JSON.parse(document.querySelector('#comparison-manifest').innerHTML);\n} catch {\n  screenshotsManifest = {\n    meta: {\n      baseScreenshotsPath: 'img/base',\n      currentScreenshotsPath: 'img/current',\n      diffScreenshotsPath: 'img/diff',\n    },\n    screenshots: {\n      'diff-size.png': {\n        isChanged: true,\n        differentSize: true,\n      },\n      'removed.png': {\n        isRemoved: true,\n        isChanged: true,\n      },\n      'added.png': {\n        isAdded: true,\n        isChanged: true,\n      },\n      'unchanged.png': {\n        differentSize: false,\n        isChanged: false,\n      },\n    },\n  };\n}\n\nReactDOM.render(\n  <ScreenshotsComparisonApp screenshotsManifest={screenshotsManifest} tabs={tabs} />,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}